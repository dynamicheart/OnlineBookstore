<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/jdbc
	http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security.xsd">


	<global-method-security secured-annotations="enabled" jsr250-annotations="enabled" pre-post-annotations="enabled"/>


	<!-- JDBC Customer details -->
	<beans:bean id="customerDetailsService"
				class="com.dynamicheart.bookstore.store.store.security.CustomerServicesImpl">
	</beans:bean>

	<!-- JDBC User details -->
	<beans:bean id="userDetailsService"
				class="com.dynamicheart.bookstore.store.admin.security.UserServicesImpl">
	</beans:bean>

	<beans:bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
		<!-- strength 4 to 31 -->
		<beans:constructor-arg value="11"/>
	</beans:bean>

	<beans:bean id="adminAccessDenied"
				class="com.dynamicheart.bookstore.store.utils.AdminAccessDeniedHandler">
		<beans:property name="accessDeniedUrl" value="/admin/denied" />
	</beans:bean>

	<!-- updates last user logon timestamp -->
	<beans:bean id="userAuthenticationSuccessHandler" class="com.dynamicheart.bookstore.store.admin.security.UserAuthenticationSuccessHandler">
	</beans:bean>

	<beans:bean id="servicesAuthenticationSuccessHandler" class="com.dynamicheart.bookstore.store.store.security.ServicesAuthenticationSuccessHandler">
	</beans:bean>

	<beans:bean id="servicesAuthenticationEntryPoint" class="com.dynamicheart.bookstore.store.store.security.ServicesAuthenticationEntryPoint">
	</beans:bean>


	<!-- spring security 4 -->
	<http pattern="/resources/**" security="none" /><!-- remove css and other static resources -->
	<http pattern="/layout/**" security="none" /><!-- remove css and other static resources -->

	<http pattern="/admin/**" auto-config="true" use-expressions="true" authentication-manager-ref="adminAuthenticationManager">
		<!-- Shopizer logon page -->
		<intercept-url pattern="/admin/login*" access="permitAll" />
		<intercept-url pattern="/admin/denied" access="permitAll" />
		<intercept-url pattern="/admin/unauthorized" access="permitAll" />



		<intercept-url pattern="/admin" access="hasRole('AUTH')" />
		<intercept-url pattern="/admin/" access="hasRole('AUTH')" />
		<intercept-url pattern="/admin/**" access="hasRole('AUTH')" />
		<intercept-url pattern="/admin/*/**" access="hasRole('AUTH')" />
		<intercept-url pattern="/admin/*/*/**" access="hasRole('AUTH')" />


		<form-login login-page="/admin/login"
					username-parameter="username"
					password-parameter="password"
					login-processing-url="/login"
					authentication-success-handler-ref="userAuthenticationSuccessHandler"
					authentication-failure-url="/admin/login?login_error=true"
		/>


		<logout invalidate-session="true"
				logout-success-url="/admin/home"
				logout-url="/admin/logout" />

		<csrf disabled="true"/><!-- Spring security 4 -->

		<access-denied-handler ref="adminAccessDenied"/>
	</http>


	<http pattern="/store/**" auto-config="true" use-expressions="true" authentication-manager-ref="customerAuthenticationManager">

		<intercept-url pattern="/store" access="permitAll" />
		<intercept-url pattern="/store/" access="permitAll" />
		<intercept-url pattern="/store/**" access="permitAll" />
		<intercept-url pattern="/store/customer/logon*" access="permitAll" />
		<intercept-url pattern="/store/customer/registration*" access="permitAll" />
		<intercept-url pattern="/store/customer/customLogon*" access="permitAll" />
		<intercept-url pattern="/store/customer/denied" access="permitAll" />
		<intercept-url pattern="/store/customer/logon" access="permitAll" />
		<intercept-url pattern="/store/customer" access="hasRole('AUTH_CUSTOMER')" />
		<intercept-url pattern="/store/customer/" access="hasRole('AUTH_CUSTOMER')" />
		<intercept-url pattern="/store/customer/**" access="hasRole('AUTH_CUSTOMER')" />
		<intercept-url pattern="/store/customer/**" access="hasRole('AUTH_CUSTOMER')" />
		<intercept-url pattern="/store/customer/*/**" access="hasRole('AUTH_CUSTOMER')" />
		<intercept-url pattern="/store/customer/*/*/**" access="hasRole('AUTH_CUSTOMER')" />

		<logout invalidate-session="false"
				logout-success-url="/store/"
				logout-url="/store/customer/logout" />
		<access-denied-handler error-page="/store/"/>

		<csrf disabled="true"/><!-- Spring security 4 -->
	</http>

	<!-- REST services -->
	<http pattern="/services/**" create-session="stateless" use-expressions="true" authentication-manager-ref="adminAuthenticationManager" entry-point-ref="servicesAuthenticationEntryPoint">
		<intercept-url pattern="/servicesintercept/private/**" access="hasRole('AUTH')"/>
		<intercept-url pattern="/services/public/**" access="permitAll"/>
		<form-login authentication-success-handler-ref="servicesAuthenticationSuccessHandler" />
		<http-basic />
		<csrf disabled="true"/><!-- Spring security 4 -->
	</http>

	<authentication-manager id="adminAuthenticationManager">
		<authentication-provider user-service-ref="userDetailsService">
			<password-encoder ref="passwordEncoder" hash="sha"/>
		</authentication-provider>
	</authentication-manager>

	<authentication-manager id="customerAuthenticationManager">
		<authentication-provider user-service-ref="customerDetailsService">
			<password-encoder ref="passwordEncoder" hash="sha"/>
		</authentication-provider>
	</authentication-manager>


</beans:beans>